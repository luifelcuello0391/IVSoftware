// <auto-generated />
using System;
using IVSoftware.Web.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IVSoftware.Web.Migrations
{
    [DbContext(typeof(IVSoftwareContext))]
    [Migration("20210122011433_EvaluationQuestionBank")]
    partial class EvaluationQuestionBank
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("IVSoftware.Data.Models.AcademicLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("AcademicLevel");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.Arl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Arl");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.BasicEducation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("DegreeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InstitutionName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("LastGradeApproved")
                        .HasColumnType("int");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SpecialtyName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("BasicEducation");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.BloodType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("BloodType");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModificationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegisterStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.CertificationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("CertificationType");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.CheckListQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModificationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegisterStatus")
                        .HasColumnType("int");

                    b.Property<int>("TypeOfQuestion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CheckListQuestion");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.CheckListQuestionCheckListSection", b =>
                {
                    b.Property<int>("CheckListQuestionCheckListSectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int?>("QuestionsId")
                        .HasColumnType("int");

                    b.Property<int?>("SectionsId")
                        .HasColumnType("int");

                    b.HasKey("CheckListQuestionCheckListSectionId");

                    b.HasIndex("QuestionsId");

                    b.HasIndex("SectionsId");

                    b.ToTable("CheckListQuestionCheckListSection");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.CheckListResponseDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<int>("HeaderId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModificationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("RegisterStatus")
                        .HasColumnType("int");

                    b.Property<string>("Response")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SectionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HeaderId");

                    b.HasIndex("QuestionId");

                    b.HasIndex("SectionId");

                    b.ToTable("CheckListResponseDetail");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.CheckListSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModificationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegisterStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CheckListSection");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.ChecklistResponseHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CheckListId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FillUpDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModificationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegisterStatus")
                        .HasColumnType("int");

                    b.Property<Guid?>("ValidatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ValidationResult")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CheckListId");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("ValidatedById");

                    b.ToTable("ChecklistResponseHeader");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.ClientContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AddressDepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("CellPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<int?>("ClientModelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DocumentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModificationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegisterStatus")
                        .HasColumnType("int");

                    b.Property<string>("ReportDeliveryEmail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AddressDepartmentId");

                    b.HasIndex("CityId");

                    b.HasIndex("ClientModelId");

                    b.HasIndex("DocumentTypeId");

                    b.ToTable("ClientContact");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.ClientModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CellPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<int?>("ClientTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int?>("DocumentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRegular")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastServiceExecutionDatetime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModificationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonType")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegisterStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("ClientTypeId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DocumentTypeId");

                    b.ToTable("ClientModel");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.ClientTypeIncentiveRelation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ClientTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("IncentiveId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientTypeId");

                    b.HasIndex("IncentiveId");

                    b.ToTable("ClientTypeIncentiveRelation");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.ClientTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModificationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("MustPayServices")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegisterStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ClientTypeModel");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.ContractType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("ContractType");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.Eps", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Eps");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<float>("Accuracy")
                        .HasColumnType("real");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EquipBrandId")
                        .HasColumnType("int");

                    b.Property<int?>("EquipProviderId")
                        .HasColumnType("int");

                    b.Property<string>("Magnitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("MinimumRead")
                        .HasColumnType("real");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModificationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherRecomendation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PowerSupply")
                        .HasColumnType("real");

                    b.Property<DateTime?>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Range")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegisterStatus")
                        .HasColumnType("int");

                    b.Property<string>("Serie")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EquipBrandId");

                    b.HasIndex("EquipProviderId");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.EquipmentCheckList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModificationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegisterStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EquipmentCheckList");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.EquipmentCheckListQuestions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CheckListId")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int?>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CheckListId");

                    b.HasIndex("QuestionId");

                    b.ToTable("EquipmentCheckListQuestions");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.EquipmentCheckListSections", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ChecklistId")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int?>("SectionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChecklistId");

                    b.HasIndex("SectionId");

                    b.ToTable("EquipmentCheckListSections");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.Evaluation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("PeriodicityAmount")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodicityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PeriodicityId");

                    b.ToTable("Evaluation");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.EvaluationQuestionBank", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.ToTable("EvaluationQuestion");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Gender");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.HigherEducation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<int>("AcademicLevelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DegreeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InstitutionName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProfessionalCardNumber")
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("StudiesName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("AcademicLevelId");

                    b.HasIndex("PersonId");

                    b.ToTable("HigherEducation");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.IdentificationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("IdentificationType");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.IncentiveModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPercentage")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegisterStatus")
                        .HasColumnType("int");

                    b.Property<float>("Value")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("IncentiveModel");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.JobRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("JobRole");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.MatrixModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModificationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OnlyForServices")
                        .HasColumnType("bit");

                    b.Property<int>("RegisterStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MatrixModel");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.MeasurementUnitModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModificationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegisterStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MeasurementUnitModel");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.Municipality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Municipality");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.OtherTechnicalKnowledge", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("OtherTechnicalKnowledge");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.Periodicity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Periodicity");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Address")
                        .HasMaxLength(250)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("ArlId")
                        .HasColumnType("int");

                    b.Property<int?>("BirthCountryId")
                        .HasColumnType("int");

                    b.Property<int?>("BirthMunicipalityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("BloodTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CompletionDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ContractTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("CorrespondenceCountryId")
                        .HasColumnType("int");

                    b.Property<int?>("CorrespondenceMunicipalityId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("EpsId")
                        .HasColumnType("int");

                    b.Property<string>("FirstLastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("IdentificationNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("IdentificationTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsColombian")
                        .HasColumnType("bit");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MilitaryCardId")
                        .HasMaxLength(20)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MilitaryCardType")
                        .HasMaxLength(2)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("MilitaryDistrict")
                        .HasMaxLength(250)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(30)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Photo")
                        .HasMaxLength(1000)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("SecondLastName")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Skills")
                        .HasMaxLength(2500)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(2500)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasAlternateKey("IdentificationNumber");

                    b.HasIndex("ArlId");

                    b.HasIndex("BirthCountryId");

                    b.HasIndex("BirthMunicipalityId");

                    b.HasIndex("BloodTypeId");

                    b.HasIndex("ContractTypeId");

                    b.HasIndex("CorrespondenceCountryId");

                    b.HasIndex("CorrespondenceMunicipalityId");

                    b.HasIndex("EpsId");

                    b.HasIndex("GenderId");

                    b.HasIndex("IdentificationTypeId");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.PersonEvaluation", b =>
                {
                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EvaluationId")
                        .HasColumnType("int");

                    b.HasKey("PersonId", "EvaluationId");

                    b.HasIndex("EvaluationId");

                    b.ToTable("PersonEvaluations");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.PersonJobRole", b =>
                {
                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("JobRoleId")
                        .HasColumnType("int");

                    b.HasKey("PersonId", "JobRoleId");

                    b.HasIndex("JobRoleId");

                    b.ToTable("PersonJobRoles");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.Provider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModificationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegisterStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Provider");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.QuotationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClientAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientContactPosition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("ClientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Exceptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Greetings")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("MeasurementSubtotal")
                        .HasColumnType("real");

                    b.Property<float>("MeasurementTotalValue")
                        .HasColumnType("real");

                    b.Property<DateTime?>("ModificationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegisterStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReservationMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("ServicesSubtotal")
                        .HasColumnType("real");

                    b.Property<float>("ServicesTotalValue")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("QuotationModel");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.QuotationRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("ClientRequestDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GenerationUsedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("HasBeenGenerated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastGenerationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModificationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegisterStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("RequestDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("GenerationUsedId");

                    b.HasIndex("StatusId");

                    b.ToTable("QuotationRequest");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.QuotationStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModificationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegisterStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("QuotationStatus");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.ReferenceMethodCondition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModificationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuotationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegisterStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ReferenceMethodCondition");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.ReferenceMethodModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasUncertainty")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPercentage")
                        .HasColumnType("bit");

                    b.Property<float>("MeasurementUncertaintyLowerValue")
                        .HasColumnType("real");

                    b.Property<float>("MeasurementUncertaintyUpperValue")
                        .HasColumnType("real");

                    b.Property<DateTime?>("ModificationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegisterStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ReferenceMethodModel");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.ServiceGroupModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("AvailableForClients")
                        .HasColumnType("bit");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModificationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegisterStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ServiceGroupModel");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.ServiceGroupServicesRelation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ServiceGroupId")
                        .HasColumnType("int");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ServiceGroupId");

                    b.HasIndex("ServiceId");

                    b.ToTable("ServiceGroupServicesRelation");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.ServiceModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("AcredditedByIdeam")
                        .HasColumnType("bit");

                    b.Property<bool>("AuthorizedByINS")
                        .HasColumnType("bit");

                    b.Property<bool>("AvailableForClients")
                        .HasColumnType("bit");

                    b.Property<string>("BillingCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MatrixGroupId")
                        .HasColumnType("int");

                    b.Property<float>("MaximumValue")
                        .HasColumnType("real");

                    b.Property<float>("MinimumValue")
                        .HasColumnType("real");

                    b.Property<DateTime?>("ModificationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Precondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReferenceMethodId")
                        .HasColumnType("int");

                    b.Property<int>("RegisterStatus")
                        .HasColumnType("int");

                    b.Property<int>("ReportDeliveryTime")
                        .HasColumnType("int");

                    b.Property<int?>("ServiceTypeId")
                        .HasColumnType("int");

                    b.Property<float>("UnitValue")
                        .HasColumnType("real");

                    b.Property<bool>("Valid")
                        .HasColumnType("bit");

                    b.Property<int>("WeeklyAssignmentQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MatrixGroupId");

                    b.HasIndex("PersonId");

                    b.HasIndex("ReferenceMethodId");

                    b.HasIndex("ServiceTypeId");

                    b.ToTable("ServiceModel");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.ServicesIntoQuotation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("QuotationRequestId")
                        .HasColumnType("int");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuotationRequestId");

                    b.HasIndex("ServiceId");

                    b.ToTable("ServicesIntoQuotation");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.TechnicalKnowledge", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("AnalyticTechnique")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("MatrixId")
                        .HasColumnType("int");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("MatrixId");

                    b.HasIndex("PersonId");

                    b.HasIndex("ServiceId");

                    b.ToTable("TechnicalKnowledge");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.Training", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<int>("CertificationTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Entity")
                        .HasMaxLength(500)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("NumberOfHours")
                        .HasColumnType("int");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("CertificationTypeId");

                    b.HasIndex("PersonId");

                    b.ToTable("Training");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.TypeOfService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModificationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegisterStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TypeOfService");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.VariableModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MeasurementUnitId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModificationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegisterStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MeasurementUnitId");

                    b.ToTable("VariableModel");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.WorkExperience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Responsibilities")
                        .HasMaxLength(2000)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("WorkExperience");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.WorkingRangeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("MaximumValue")
                        .HasColumnType("real");

                    b.Property<float>("MinimumValue")
                        .HasColumnType("real");

                    b.Property<DateTime?>("ModificationDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Precondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegisterStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WorkingRangeModel");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.AplicacionEvaluacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("EvaluacionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaAplicacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("PersonaId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("EvaluacionId");

                    b.HasIndex("PersonaId");

                    b.ToTable("AplicacionEvaluacion");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.ConocimientoTecnico", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Analisis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Matriz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonaId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TecnicaAnalitica")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tiempo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.ToTable("ConocimientoTecnico");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departamento");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.DetalleEvaluacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AplicacionEvaluacionId")
                        .HasColumnType("int");

                    b.Property<int>("PreguntaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AplicacionEvaluacionId");

                    b.HasIndex("PreguntaId");

                    b.ToTable("DetalleEvaluacion");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.EducacionBasica", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("FechaGrado")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreInstitucion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonaId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TituloObtenido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UltimoGradoAprobado")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.ToTable("EducacionBasica");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.EducacionSuperior", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("ArchivoAdjunto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EsGraduado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaGrado")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModalidadAcademicaId")
                        .HasColumnType("int");

                    b.Property<string>("NombreEstudios")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreInstitucion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroTarjetaProfesional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonaId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SemestresAprobados")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ModalidadAcademicaId");

                    b.HasIndex("PersonaId");

                    b.ToTable("EducacionSuperior");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.Evaluacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Evaluacion");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.ExperienciaLaboral", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("ArchivoAdjunto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CargoContrato")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorreoElectronico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dependencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EsActual")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRetiro")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MunicipioId")
                        .HasColumnType("int");

                    b.Property<string>("NombreEmpresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaisId")
                        .HasColumnType("int");

                    b.Property<string>("PersonaId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Responsabilidades")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoEmpresaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MunicipioId");

                    b.HasIndex("PaisId");

                    b.HasIndex("PersonaId");

                    b.HasIndex("TipoEmpresaId");

                    b.ToTable("ExperienciaLaboral");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.Formacion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("ArchivoAdjunto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Entidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaFinalizacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreCurso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroHoras")
                        .HasColumnType("int");

                    b.Property<string>("PersonaId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Tema")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoCertificacionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.HasIndex("TipoCertificacionId");

                    b.ToTable("Formacion");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.Idioma", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<int>("Escribe")
                        .HasColumnType("int");

                    b.Property<int>("Habla")
                        .HasColumnType("int");

                    b.Property<int>("Lee")
                        .HasColumnType("int");

                    b.Property<string>("PersonaId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("TipoIdiomaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.HasIndex("TipoIdiomaId");

                    b.ToTable("Idioma");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.ModalidadAcademica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ModalidadAcademica");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.Municipio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoId");

                    b.ToTable("Municipio");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.OtroConocimiento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonaId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Tiempo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.ToTable("OtroConocimiento");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pais");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.Persona", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int?>("ArlId")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistritoMilitar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("EpsId")
                        .HasColumnType("int");

                    b.Property<bool?>("EsColombiano")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaDiligenciamiento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Foto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Habilidades")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("MunicipioCorrespondenciaId")
                        .HasColumnType("int");

                    b.Property<int?>("MunicipioNacimientoId")
                        .HasColumnType("int");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroIdentificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroLibretaMilitar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaisCorrespondenciaId")
                        .HasColumnType("int");

                    b.Property<int?>("PaisNacimientoId")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PrimerApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoContratoId")
                        .HasColumnType("int");

                    b.Property<int>("TipoDocumentoId")
                        .HasColumnType("int");

                    b.Property<string>("TipoLibretaMilitar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipoSangreId")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArlId");

                    b.HasIndex("EpsId");

                    b.HasIndex("MunicipioCorrespondenciaId");

                    b.HasIndex("MunicipioNacimientoId");

                    b.HasIndex("PaisCorrespondenciaId");

                    b.HasIndex("PaisNacimientoId");

                    b.HasIndex("TipoContratoId");

                    b.HasIndex("TipoDocumentoId");

                    b.HasIndex("TipoSangreId");

                    b.ToTable("Persona");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.PersonaInduccion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("FechaInduccion")
                        .HasColumnType("datetime2");

                    b.Property<string>("PersonaId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TipoInduccionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.HasIndex("TipoInduccionId");

                    b.ToTable("PersonaInduccion");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.Pregunta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Enunciado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EvaluacionId")
                        .HasColumnType("int");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<int>("TipoPregunta")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EvaluacionId");

                    b.ToTable("Pregunta");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.Respuesta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<int>("PreguntaId")
                        .HasColumnType("int");

                    b.Property<bool>("RespuestaCorrecta")
                        .HasColumnType("bit");

                    b.Property<string>("Texto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PreguntaId");

                    b.ToTable("Respuesta");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.RespuestaEvaluacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("DetalleEvaluacionId")
                        .HasColumnType("int");

                    b.Property<int>("PreguntaId")
                        .HasColumnType("int");

                    b.Property<int?>("RespuestaId")
                        .HasColumnType("int");

                    b.Property<string>("TextoRespuesta")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DetalleEvaluacionId");

                    b.HasIndex("PreguntaId");

                    b.HasIndex("RespuestaId");

                    b.ToTable("RespuestaEvaluacion");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.RolSistemaGestion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<int>("IndicadorAutorizacion")
                        .HasColumnType("int");

                    b.Property<string>("PersonaId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("TipoRolGestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.HasIndex("TipoRolGestionId");

                    b.ToTable("RolSistemaGestion");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.TipoCertificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoCertificacion");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.TipoContrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoContrato");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.TipoDocumento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoDocumento");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.TipoEmpresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoEmpresa");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.TipoIdioma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("TipoIdioma");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.TipoInduccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoInduccion");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.TipoRolGestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("TipoRolGestion");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.TipoSangre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoSangre");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.BasicEducation", b =>
                {
                    b.HasOne("IVSoftware.Data.Models.Person", "Person")
                        .WithMany("BasicEducations")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.CheckListQuestionCheckListSection", b =>
                {
                    b.HasOne("IVSoftware.Data.Models.CheckListQuestion", "CheckListQuestion")
                        .WithMany("QuestionSection")
                        .HasForeignKey("QuestionsId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("IVSoftware.Data.Models.CheckListSection", "CheckListSection")
                        .WithMany("QuestionSections")
                        .HasForeignKey("SectionsId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.Navigation("CheckListQuestion");

                    b.Navigation("CheckListSection");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.CheckListResponseDetail", b =>
                {
                    b.HasOne("IVSoftware.Data.Models.ChecklistResponseHeader", "Header")
                        .WithMany("Details")
                        .HasForeignKey("HeaderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IVSoftware.Data.Models.CheckListQuestion", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IVSoftware.Data.Models.CheckListSection", "Section")
                        .WithMany()
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Header");

                    b.Navigation("Question");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.ChecklistResponseHeader", b =>
                {
                    b.HasOne("IVSoftware.Data.Models.EquipmentCheckList", "CheckList")
                        .WithMany()
                        .HasForeignKey("CheckListId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IVSoftware.Data.Models.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IVSoftware.Data.Models.Person", "ValidatedBy")
                        .WithMany()
                        .HasForeignKey("ValidatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CheckList");

                    b.Navigation("Equipment");

                    b.Navigation("ValidatedBy");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.ClientContact", b =>
                {
                    b.HasOne("IVSoftware.Data.Models.Department", "AddressDepartment")
                        .WithMany()
                        .HasForeignKey("AddressDepartmentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IVSoftware.Data.Models.Municipality", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IVSoftware.Data.Models.ClientModel", null)
                        .WithMany("Contacts")
                        .HasForeignKey("ClientModelId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IVSoftware.Data.Models.IdentificationType", "DocumentType")
                        .WithMany()
                        .HasForeignKey("DocumentTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("AddressDepartment");

                    b.Navigation("City");

                    b.Navigation("DocumentType");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.ClientModel", b =>
                {
                    b.HasOne("IVSoftware.Data.Models.Municipality", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IVSoftware.Data.Models.ClientTypeModel", "ClientType")
                        .WithMany()
                        .HasForeignKey("ClientTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IVSoftware.Data.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IVSoftware.Data.Models.IdentificationType", "DocumentType")
                        .WithMany()
                        .HasForeignKey("DocumentTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("City");

                    b.Navigation("ClientType");

                    b.Navigation("Department");

                    b.Navigation("DocumentType");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.ClientTypeIncentiveRelation", b =>
                {
                    b.HasOne("IVSoftware.Data.Models.ClientTypeModel", "ClientType")
                        .WithMany("Incentives")
                        .HasForeignKey("ClientTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IVSoftware.Data.Models.IncentiveModel", "Incentive")
                        .WithMany("ClientTypes")
                        .HasForeignKey("IncentiveId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ClientType");

                    b.Navigation("Incentive");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.Equipment", b =>
                {
                    b.HasOne("IVSoftware.Data.Models.Brand", "EquipBrand")
                        .WithMany()
                        .HasForeignKey("EquipBrandId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IVSoftware.Data.Models.Provider", "EquipProvider")
                        .WithMany()
                        .HasForeignKey("EquipProviderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("EquipBrand");

                    b.Navigation("EquipProvider");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.EquipmentCheckListQuestions", b =>
                {
                    b.HasOne("IVSoftware.Data.Models.EquipmentCheckList", "Checklist")
                        .WithMany("Questions")
                        .HasForeignKey("CheckListId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IVSoftware.Data.Models.CheckListQuestion", "Question")
                        .WithMany("CheckList")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Checklist");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.EquipmentCheckListSections", b =>
                {
                    b.HasOne("IVSoftware.Data.Models.EquipmentCheckList", "CheckList")
                        .WithMany("Sections")
                        .HasForeignKey("ChecklistId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IVSoftware.Data.Models.CheckListSection", "Section")
                        .WithMany("CheckLists")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CheckList");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.Evaluation", b =>
                {
                    b.HasOne("IVSoftware.Data.Models.Periodicity", "Periodicity")
                        .WithMany("Evaluations")
                        .HasForeignKey("PeriodicityId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Periodicity");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.HigherEducation", b =>
                {
                    b.HasOne("IVSoftware.Data.Models.AcademicLevel", "AcademicLevel")
                        .WithMany("HigherEducations")
                        .HasForeignKey("AcademicLevelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IVSoftware.Data.Models.Person", "Person")
                        .WithMany("HigherEducations")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AcademicLevel");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.Municipality", b =>
                {
                    b.HasOne("IVSoftware.Data.Models.Department", "Department")
                        .WithMany("Municipalities")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Department");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.OtherTechnicalKnowledge", b =>
                {
                    b.HasOne("IVSoftware.Data.Models.Person", "Person")
                        .WithMany("OtherTechnicalKnowledges")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.Person", b =>
                {
                    b.HasOne("IVSoftware.Data.Models.Arl", "Arl")
                        .WithMany("People")
                        .HasForeignKey("ArlId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("IVSoftware.Data.Models.Country", "BirthCountry")
                        .WithMany("PeopleBirth")
                        .HasForeignKey("BirthCountryId");

                    b.HasOne("IVSoftware.Data.Models.Municipality", "BirthMunicipality")
                        .WithMany("PeopleBirth")
                        .HasForeignKey("BirthMunicipalityId");

                    b.HasOne("IVSoftware.Data.Models.BloodType", "BloodType")
                        .WithMany("People")
                        .HasForeignKey("BloodTypeId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("IVSoftware.Data.Models.ContractType", "ContractType")
                        .WithMany("People")
                        .HasForeignKey("ContractTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IVSoftware.Data.Models.Country", "CorrespondenceCountry")
                        .WithMany("PeopleCorrespondence")
                        .HasForeignKey("CorrespondenceCountryId");

                    b.HasOne("IVSoftware.Data.Models.Municipality", "CorrespondenceMunicipality")
                        .WithMany("PeopleCorrespondence")
                        .HasForeignKey("CorrespondenceMunicipalityId");

                    b.HasOne("IVSoftware.Data.Models.Eps", "Eps")
                        .WithMany("People")
                        .HasForeignKey("EpsId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("IVSoftware.Data.Models.Gender", "Gender")
                        .WithMany("Persons")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("IVSoftware.Data.Models.IdentificationType", "IdentificationType")
                        .WithMany("People")
                        .HasForeignKey("IdentificationTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IVSoftware.Data.Models.User", "User")
                        .WithOne("Person")
                        .HasForeignKey("IVSoftware.Data.Models.Person", "UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Arl");

                    b.Navigation("BirthCountry");

                    b.Navigation("BirthMunicipality");

                    b.Navigation("BloodType");

                    b.Navigation("ContractType");

                    b.Navigation("CorrespondenceCountry");

                    b.Navigation("CorrespondenceMunicipality");

                    b.Navigation("Eps");

                    b.Navigation("Gender");

                    b.Navigation("IdentificationType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.PersonEvaluation", b =>
                {
                    b.HasOne("IVSoftware.Data.Models.Evaluation", "Evaluation")
                        .WithMany("PersonEvaluations")
                        .HasForeignKey("EvaluationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IVSoftware.Data.Models.Person", "Person")
                        .WithMany("PersonEvaluations")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evaluation");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.PersonJobRole", b =>
                {
                    b.HasOne("IVSoftware.Data.Models.JobRole", "JobRole")
                        .WithMany("PeopleJobRole")
                        .HasForeignKey("JobRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IVSoftware.Data.Models.Person", "Person")
                        .WithMany("PeopleJobRole")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobRole");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.QuotationRequest", b =>
                {
                    b.HasOne("IVSoftware.Data.Models.ClientModel", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IVSoftware.Data.Models.Person", "GenerationUsed")
                        .WithMany()
                        .HasForeignKey("GenerationUsedId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IVSoftware.Data.Models.QuotationStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Client");

                    b.Navigation("GenerationUsed");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.ServiceGroupServicesRelation", b =>
                {
                    b.HasOne("IVSoftware.Data.Models.ServiceGroupModel", "ServiceGroup")
                        .WithMany("Services")
                        .HasForeignKey("ServiceGroupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IVSoftware.Data.Models.ServiceModel", "Service")
                        .WithMany("ServiceGroups")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Service");

                    b.Navigation("ServiceGroup");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.ServiceModel", b =>
                {
                    b.HasOne("IVSoftware.Data.Models.MatrixModel", "MatrixGroup")
                        .WithMany()
                        .HasForeignKey("MatrixGroupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IVSoftware.Data.Models.Person", "Responsable")
                        .WithMany("Services")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("IVSoftware.Data.Models.ReferenceMethodModel", "ReferenceMethod")
                        .WithMany()
                        .HasForeignKey("ReferenceMethodId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IVSoftware.Data.Models.TypeOfService", "ServiceType")
                        .WithMany()
                        .HasForeignKey("ServiceTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("MatrixGroup");

                    b.Navigation("ReferenceMethod");

                    b.Navigation("Responsable");

                    b.Navigation("ServiceType");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.ServicesIntoQuotation", b =>
                {
                    b.HasOne("IVSoftware.Data.Models.QuotationRequest", "QuotationRequest")
                        .WithMany("Services")
                        .HasForeignKey("QuotationRequestId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IVSoftware.Data.Models.ServiceModel", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("QuotationRequest");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.TechnicalKnowledge", b =>
                {
                    b.HasOne("IVSoftware.Data.Models.MatrixModel", "Matrix")
                        .WithMany("TechnicalKnowledges")
                        .HasForeignKey("MatrixId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IVSoftware.Data.Models.Person", "Person")
                        .WithMany("TechnicalKnowledges")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IVSoftware.Data.Models.ServiceModel", "Service")
                        .WithMany("TechnicalKnowledges")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Matrix");

                    b.Navigation("Person");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.Training", b =>
                {
                    b.HasOne("IVSoftware.Data.Models.CertificationType", "CertificationType")
                        .WithMany("Trainings")
                        .HasForeignKey("CertificationTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IVSoftware.Data.Models.Person", "Person")
                        .WithMany("Trainings")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CertificationType");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.VariableModel", b =>
                {
                    b.HasOne("IVSoftware.Data.Models.MeasurementUnitModel", "MeasurementUnit")
                        .WithMany()
                        .HasForeignKey("MeasurementUnitId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("MeasurementUnit");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.WorkExperience", b =>
                {
                    b.HasOne("IVSoftware.Data.Models.Person", "Person")
                        .WithMany("WorkExperiences")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.AplicacionEvaluacion", b =>
                {
                    b.HasOne("IVSoftware.Web.Models.Evaluacion", "Evaluacion")
                        .WithMany()
                        .HasForeignKey("EvaluacionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IVSoftware.Web.Models.Persona", "Persona")
                        .WithMany("ListAplicacionEvaluacion")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Evaluacion");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.ConocimientoTecnico", b =>
                {
                    b.HasOne("IVSoftware.Web.Models.Persona", "Persona")
                        .WithMany("ListConocimientoTecnico")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.DetalleEvaluacion", b =>
                {
                    b.HasOne("IVSoftware.Web.Models.AplicacionEvaluacion", "AplicacionEvaluacion")
                        .WithMany()
                        .HasForeignKey("AplicacionEvaluacionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IVSoftware.Web.Models.Respuesta", "Pregunta")
                        .WithMany()
                        .HasForeignKey("PreguntaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AplicacionEvaluacion");

                    b.Navigation("Pregunta");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.EducacionBasica", b =>
                {
                    b.HasOne("IVSoftware.Web.Models.Persona", "Persona")
                        .WithMany("ListEducacionBasica")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.EducacionSuperior", b =>
                {
                    b.HasOne("IVSoftware.Web.Models.ModalidadAcademica", "ModalidadAcademica")
                        .WithMany("ListEducacionSuperior")
                        .HasForeignKey("ModalidadAcademicaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IVSoftware.Web.Models.Persona", "Persona")
                        .WithMany("ListEducacionSuperior")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ModalidadAcademica");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.ExperienciaLaboral", b =>
                {
                    b.HasOne("IVSoftware.Web.Models.Municipio", "Municipio")
                        .WithMany()
                        .HasForeignKey("MunicipioId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IVSoftware.Web.Models.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IVSoftware.Web.Models.Persona", "Persona")
                        .WithMany("ListExperienciaLaboral")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IVSoftware.Web.Models.TipoEmpresa", "TipoEmpresa")
                        .WithMany("ListExperienciaLaboral")
                        .HasForeignKey("TipoEmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Municipio");

                    b.Navigation("Pais");

                    b.Navigation("Persona");

                    b.Navigation("TipoEmpresa");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.Formacion", b =>
                {
                    b.HasOne("IVSoftware.Web.Models.Persona", "Persona")
                        .WithMany("ListFormacion")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IVSoftware.Web.Models.TipoCertificacion", "TipoCertificacion")
                        .WithMany("ListFormacion")
                        .HasForeignKey("TipoCertificacionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Persona");

                    b.Navigation("TipoCertificacion");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.Idioma", b =>
                {
                    b.HasOne("IVSoftware.Web.Models.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IVSoftware.Web.Models.TipoIdioma", "TipoIdioma")
                        .WithMany()
                        .HasForeignKey("TipoIdiomaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Persona");

                    b.Navigation("TipoIdioma");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.Municipio", b =>
                {
                    b.HasOne("IVSoftware.Web.Models.Departamento", "Departamento")
                        .WithMany()
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Departamento");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.OtroConocimiento", b =>
                {
                    b.HasOne("IVSoftware.Web.Models.Persona", "Persona")
                        .WithMany("ListOtroConocimiento")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.Persona", b =>
                {
                    b.HasOne("IVSoftware.Data.Models.Arl", "Arl")
                        .WithMany()
                        .HasForeignKey("ArlId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IVSoftware.Data.Models.Eps", "Eps")
                        .WithMany()
                        .HasForeignKey("EpsId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IVSoftware.Web.Models.Municipio", "MunicipioCorrespondencia")
                        .WithMany()
                        .HasForeignKey("MunicipioCorrespondenciaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IVSoftware.Web.Models.Municipio", "MunicipioNacimiento")
                        .WithMany()
                        .HasForeignKey("MunicipioNacimientoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IVSoftware.Web.Models.Pais", "PaisCorrespondencia")
                        .WithMany()
                        .HasForeignKey("PaisCorrespondenciaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IVSoftware.Web.Models.Pais", "PaisNacimiento")
                        .WithMany()
                        .HasForeignKey("PaisNacimientoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IVSoftware.Web.Models.TipoContrato", "TipoContrato")
                        .WithMany()
                        .HasForeignKey("TipoContratoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IVSoftware.Web.Models.TipoDocumento", "TipoDocumento")
                        .WithMany()
                        .HasForeignKey("TipoDocumentoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IVSoftware.Web.Models.TipoSangre", "TipoSangre")
                        .WithMany()
                        .HasForeignKey("TipoSangreId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Arl");

                    b.Navigation("Eps");

                    b.Navigation("MunicipioCorrespondencia");

                    b.Navigation("MunicipioNacimiento");

                    b.Navigation("PaisCorrespondencia");

                    b.Navigation("PaisNacimiento");

                    b.Navigation("TipoContrato");

                    b.Navigation("TipoDocumento");

                    b.Navigation("TipoSangre");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.PersonaInduccion", b =>
                {
                    b.HasOne("IVSoftware.Web.Models.Persona", "Persona")
                        .WithMany("ListPersonaInduccion")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IVSoftware.Web.Models.TipoInduccion", "TipoInduccion")
                        .WithMany()
                        .HasForeignKey("TipoInduccionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Persona");

                    b.Navigation("TipoInduccion");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.Pregunta", b =>
                {
                    b.HasOne("IVSoftware.Web.Models.Evaluacion", "Evaluacion")
                        .WithMany("ListPregunta")
                        .HasForeignKey("EvaluacionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Evaluacion");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.Respuesta", b =>
                {
                    b.HasOne("IVSoftware.Web.Models.Pregunta", "Pregunta")
                        .WithMany("ListRespuesta")
                        .HasForeignKey("PreguntaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pregunta");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.RespuestaEvaluacion", b =>
                {
                    b.HasOne("IVSoftware.Web.Models.DetalleEvaluacion", "DetalleEvaluacion")
                        .WithMany()
                        .HasForeignKey("DetalleEvaluacionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IVSoftware.Web.Models.Pregunta", "Pregunta")
                        .WithMany()
                        .HasForeignKey("PreguntaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IVSoftware.Web.Models.Respuesta", "Respuesta")
                        .WithMany()
                        .HasForeignKey("RespuestaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("DetalleEvaluacion");

                    b.Navigation("Pregunta");

                    b.Navigation("Respuesta");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.RolSistemaGestion", b =>
                {
                    b.HasOne("IVSoftware.Web.Models.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IVSoftware.Web.Models.TipoRolGestion", "TipoRolGestion")
                        .WithMany()
                        .HasForeignKey("TipoRolGestionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Persona");

                    b.Navigation("TipoRolGestion");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("IVSoftware.Data.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("IVSoftware.Data.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IVSoftware.Data.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("IVSoftware.Data.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IVSoftware.Data.Models.AcademicLevel", b =>
                {
                    b.Navigation("HigherEducations");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.Arl", b =>
                {
                    b.Navigation("People");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.BloodType", b =>
                {
                    b.Navigation("People");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.CertificationType", b =>
                {
                    b.Navigation("Trainings");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.CheckListQuestion", b =>
                {
                    b.Navigation("CheckList");

                    b.Navigation("QuestionSection");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.CheckListSection", b =>
                {
                    b.Navigation("CheckLists");

                    b.Navigation("QuestionSections");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.ChecklistResponseHeader", b =>
                {
                    b.Navigation("Details");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.ClientModel", b =>
                {
                    b.Navigation("Contacts");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.ClientTypeModel", b =>
                {
                    b.Navigation("Incentives");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.ContractType", b =>
                {
                    b.Navigation("People");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.Country", b =>
                {
                    b.Navigation("PeopleBirth");

                    b.Navigation("PeopleCorrespondence");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.Department", b =>
                {
                    b.Navigation("Municipalities");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.Eps", b =>
                {
                    b.Navigation("People");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.EquipmentCheckList", b =>
                {
                    b.Navigation("Questions");

                    b.Navigation("Sections");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.Evaluation", b =>
                {
                    b.Navigation("PersonEvaluations");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.Gender", b =>
                {
                    b.Navigation("Persons");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.IdentificationType", b =>
                {
                    b.Navigation("People");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.IncentiveModel", b =>
                {
                    b.Navigation("ClientTypes");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.JobRole", b =>
                {
                    b.Navigation("PeopleJobRole");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.MatrixModel", b =>
                {
                    b.Navigation("TechnicalKnowledges");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.Municipality", b =>
                {
                    b.Navigation("PeopleBirth");

                    b.Navigation("PeopleCorrespondence");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.Periodicity", b =>
                {
                    b.Navigation("Evaluations");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.Person", b =>
                {
                    b.Navigation("BasicEducations");

                    b.Navigation("HigherEducations");

                    b.Navigation("OtherTechnicalKnowledges");

                    b.Navigation("PeopleJobRole");

                    b.Navigation("PersonEvaluations");

                    b.Navigation("Services");

                    b.Navigation("TechnicalKnowledges");

                    b.Navigation("Trainings");

                    b.Navigation("WorkExperiences");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.QuotationRequest", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.ServiceGroupModel", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.ServiceModel", b =>
                {
                    b.Navigation("ServiceGroups");

                    b.Navigation("TechnicalKnowledges");
                });

            modelBuilder.Entity("IVSoftware.Data.Models.User", b =>
                {
                    b.Navigation("Person");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.Evaluacion", b =>
                {
                    b.Navigation("ListPregunta");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.ModalidadAcademica", b =>
                {
                    b.Navigation("ListEducacionSuperior");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.Persona", b =>
                {
                    b.Navigation("ListAplicacionEvaluacion");

                    b.Navigation("ListConocimientoTecnico");

                    b.Navigation("ListEducacionBasica");

                    b.Navigation("ListEducacionSuperior");

                    b.Navigation("ListExperienciaLaboral");

                    b.Navigation("ListFormacion");

                    b.Navigation("ListOtroConocimiento");

                    b.Navigation("ListPersonaInduccion");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.Pregunta", b =>
                {
                    b.Navigation("ListRespuesta");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.TipoCertificacion", b =>
                {
                    b.Navigation("ListFormacion");
                });

            modelBuilder.Entity("IVSoftware.Web.Models.TipoEmpresa", b =>
                {
                    b.Navigation("ListExperienciaLaboral");
                });
#pragma warning restore 612, 618
        }
    }
}
