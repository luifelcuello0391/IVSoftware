@model IVSoftware.Data.Models.AirResourceMonitoringDeviceMaintenance

@{
    ViewData["Title"] = "Mantenimiento o calibración";
}

<h1>@Html.DisplayFor(model => model.TypeOfMaintenance)</h1>

<div>
    <hr />
    <dl class="row">
        <dt class="col-sm-2" style="white-space:nowrap">
            @Html.DisplayNameFor(model => model.MaintenanceDate)
        </dt>
         <dd class="col-sm-10" style="margin-left:5px">
            @Html.DisplayFor(model => model.MaintenanceDate)
        </dd>
       
        <dt class="col-sm-2" style="white-space:nowrap">
            @Html.DisplayNameFor(model => model.NextMaintenanceDate)
        </dt>
         <dd class="col-sm-10" style="margin-left:5px">
            @Html.DisplayFor(model => model.NextMaintenanceDate)
        </dd>
        
    </dl>
</div>

<h5 style="color:yellowgreen">Información del equipo</h5>
<hr />
<div>
    <dl class="row">
        @if (Model.Equipment != null)
        {
            <dt class="col-sm-2" style="white-space:nowrap">
                @Html.Raw("Nombre del equipo")
            </dt>

            @if (Model.Equipment.Name != null && !string.IsNullOrEmpty(Model.Equipment.Name.Replace(" ", string.Empty)))
            {
                <dd class="col-sm-10" style="margin-left:5px">
                    @Html.DisplayFor(model => model.Equipment.Name)
                </dd>
            }
            else
            {
                <dd class="col-sm-10" style="margin-left:5px">
                    @Html.Raw("Sin datos")
                </dd>
            }


            <dt class="col-sm-2" style="white-space:nowrap">
                @Html.Raw("Serie del equipo")
            </dt>

            @if (Model.Equipment.Serie != null && !string.IsNullOrEmpty(Model.Equipment.Serie.Replace(" ", string.Empty)))
            {
                <dd class="col-sm-10" style="margin-left:5px">
                    @Html.DisplayFor(model => model.Equipment.Serie)
                </dd>
            }
            else
            {
                <dd class="col-sm-10" style="margin-left:5px">
                    @Html.Raw("Sin datos")
                </dd>
            }

            <dt class="col-sm-2" style="white-space:nowrap">
                @Html.DisplayNameFor(model => model.Equipment.PurchaseValue)
            </dt>
            <dd class="col-sm-10" style="margin-left:5px">
                $ @Html.DisplayFor(model => model.Equipment.PurchaseValue)
            </dd>
        }
        else
        {
            <dt class="col-sm-2" style="white-space:nowrap">
                @Html.Raw("")
            </dt>
            <dd class="col-sm-10" style="margin-left:5px">
                @Html.Raw("No hay equipo seleccionado")
            </dd>
        }


        <dt class="col-sm-2" style="white-space:nowrap">
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        @if (Model.Description != null && !string.IsNullOrEmpty(Model.Description.Replace(" ", string.Empty)))
        {
            <dd class="col-sm-10" style="margin-left:5px">
                @Html.DisplayFor(model => model.Description)
            </dd>
        }
        else
        {
            <dd class="col-sm-10" style="margin-left:5px">
                @Html.Raw("Sin datos")
            </dd>
        }

        <dt class="col-sm-2" style="white-space:nowrap">
            @Html.DisplayNameFor(model => model.StockNumber)
        </dt>
        <dd class="col-sm-10" style="margin-left:5px">
            @Html.DisplayFor(model => model.StockNumber)
        </dd>
    </dl>
</div>

<h5 style="color:yellowgreen">Información del proveedor de mantenimiento</h5>
<hr />
<div>
    <dl class="row">
        <dt class="col-sm-2" style="white-space:nowrap">
            @Html.DisplayNameFor(model => model.ProviderIdentificaton)
        </dt>

        @if (Model.ProviderIdentificaton != null && !string.IsNullOrEmpty(Model.ProviderIdentificaton.Replace(" ", string.Empty)))
        {
            <dd class="col-sm-10" style="margin-left:5px">
                @Html.DisplayFor(model => model.ProviderIdentificaton)
            </dd>
        }
        else
        {
            <dd class="col-sm-10" style="margin-left:5px">
                @Html.Raw("Sin datos")
            </dd>
        }

        <dt class="col-sm-2" style="white-space:nowrap">
            @Html.DisplayNameFor(model => model.ProviderName)
        </dt>

        @if (Model.ProviderName != null && !string.IsNullOrEmpty(Model.ProviderName.Replace(" ", string.Empty)))
        {
            <dd class="col-sm-10" style="margin-left:5px">
                @Html.DisplayFor(model => model.ProviderName)
            </dd>
        }
        else
        {
            <dd class="col-sm-10" style="margin-left:5px">
                @Html.Raw("Sin datos")
            </dd>
        }

        <dt class="col-sm-2" style="white-space:nowrap">
            @Html.DisplayNameFor(model => model.ProviderAddress)
        </dt>

        @if (Model.ProviderAddress != null && !string.IsNullOrEmpty(Model.ProviderAddress.Replace(" ", string.Empty)))
        {
            <dd class="col-sm-10" style="margin-left:5px">
                @Html.DisplayFor(model => model.ProviderAddress)
            </dd>
        }
        else
        {
            <dd class="col-sm-10" style="margin-left:5px">
                @Html.Raw("Sin datos")
            </dd>
        }

        <dt class="col-sm-2" style="white-space:nowrap">
            @Html.DisplayNameFor(model => model.ProviderPhoneNumber)
        </dt>

        @if (Model.ProviderPhoneNumber != null && !string.IsNullOrEmpty(Model.ProviderPhoneNumber.Replace(" ", string.Empty)))
        {
            <dd class="col-sm-10" style="margin-left:5px">
                @Html.DisplayFor(model => model.ProviderPhoneNumber)
            </dd>
        }
        else
        {
            <dd class="col-sm-10" style="margin-left:5px">
                @Html.Raw("Sin datos")
            </dd>
        }

        <dt class="col-sm-2" style="white-space:nowrap">
            @Html.DisplayNameFor(model => model.ProviderContactName)
        </dt>

        @if (Model.ProviderContactName != null && !string.IsNullOrEmpty(Model.ProviderContactName.Replace(" ", string.Empty)))
        {
            <dd class="col-sm-10" style="margin-left:5px">
                @Html.DisplayFor(model => model.ProviderContactName)
            </dd>
        }
        else
        {
            <dd class="col-sm-10" style="margin-left:5px">
                @Html.Raw("Sin datos")
            </dd>
        }

    </dl>
</div>

<h5 style="color:yellowgreen">Otra información</h5>
<hr />
<div>
    <dl class="row">
        <dt class="col-sm-2" style="white-space:nowrap">
            @Html.DisplayNameFor(model => model.SparePartsChanged)
        </dt>

        @if (Model.SparePartsChanged != null && !string.IsNullOrEmpty(Model.SparePartsChanged.Replace(" ", string.Empty)))
        {
            <dd class="col-sm-10" style="margin-left:5px">
                @Html.DisplayFor(model => model.SparePartsChanged)
            </dd>
        }
        else
        {
            <dd class="col-sm-10" style="margin-left:5px">
                @Html.Raw("Sin datos")
            </dd>
        }

        <dt class="col-sm-2" style="white-space:nowrap">
            @Html.DisplayNameFor(model => model.Observations)
        </dt>

        @if (Model.Observations != null && !string.IsNullOrEmpty(Model.Observations.Replace(" ", string.Empty)))
        {
            <dd class="col-sm-10" style="margin-left:5px">
                @Html.DisplayFor(model => model.Observations)
            </dd>
        }
        else
        {
            <dd class="col-sm-10" style="margin-left:5px">
                @Html.Raw("Sin datos")
            </dd>
        }
    </dl>
</div>

<h5 style="color:yellowgreen">Información adicional</h5>
<hr />
<div>
    <dl class="row">
        <dt class="col-sm-2" style="white-space:nowrap">
            @Html.DisplayNameFor(model => model.RegisterStatus)
        </dt>
        <dd class="col-sm-10" style="margin-left:5px">
            @Html.DisplayFor(model => model.RegisterStatusName)
        </dd>
        <dt class="col-sm-2" style="white-space:nowrap">
            @Html.DisplayNameFor(model => model.CreationDatetime)
        </dt>
        <dd class="col-sm-10" style="margin-left:5px">
            @Html.DisplayFor(model => model.CreationDatetime)
        </dd>
        <dt class="col-sm-2" style="white-space:nowrap">
            @Html.DisplayNameFor(model => model.ModificationDatetime)
        </dt>
        <dd class="col-sm-10" style="margin-left:5px">
            @Html.DisplayFor(model => model.ModificationDatetime)
        </dd>
    </dl>

    <h5 style="color:yellowgreen">Certificado de mantenimiento y/o calibración</h5>
    <hr />
    <dl class="row">
        <dd class="col-sm-10" style="margin-left:5px">
            @if (Model.MaintenanceCertificateDocument != null && Model.MaintenanceCertificateDocument.Url != null && !string.IsNullOrEmpty(Model.MaintenanceCertificateDocument.Url.Replace(" ", string.Empty)))
            {
                <a asp-action="DownloadFile" asp-route-fileName="@Model.MaintenanceCertificateDocument.Url">Descargar: @Model.MaintenanceCertificateDocument.Name</a>
            }
            else
            {
                @Html.Raw("No se han adjuntado ningún documento")
            }
        </dd>
    </dl>
</div>

<div>
    <a asp-action="Edit" asp-route-id="@Model.Id">Editar</a> |
    <a asp-action="Index">Regresar</a>
</div>
