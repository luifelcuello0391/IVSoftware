@model IVSoftware.Data.Models.ReferenceMethodModel

@{
    ViewData["Title"] = "Nuevo método de referencia";
}

<h1>Crear</h1>

<h4>Método de referencia</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input id="chk_has_uncertaintly" class="form-check-input" asp-for="HasUncertainty" onchange="HasUncertaintlyChange()"/> @Html.DisplayNameFor(model => model.HasUncertainty)
                </label>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsPercentage" /> @Html.DisplayNameFor(model => model.IsPercentage)
                </label>
            </div>
            <div class="form-group" style="display:none" id="div_lower">
                <label asp-for="MeasurementUncertaintyLowerValue" class="control-label"></label>
                <input id="txt_lower" asp-for="MeasurementUncertaintyLowerValue" class="form-control" value="0"/>
                <span asp-validation-for="MeasurementUncertaintyLowerValue" class="text-danger"></span>
            </div>
            <div class="form-group" style="display:none" id="div_upper">
                <label asp-for="MeasurementUncertaintyUpperValue" class="control-label"></label>
                <input id="txt_upper" asp-for="MeasurementUncertaintyUpperValue" class="form-control" value="0" />
                <span asp-validation-for="MeasurementUncertaintyUpperValue" class="text-danger"></span>
            </div>

            <div class="form-group" style="display:none">
                <label asp-for="RegisterStatus" class="control-label"></label>
                <input asp-for="RegisterStatus" class="form-control" value="1" />
                <span asp-validation-for="RegisterStatus" class="text-danger"></span>
            </div>

            <div class="form-group" style="display:none">
                <label asp-for="CreationDatetime" class="control-label"></label>
                <input id="creation_date" asp-for="CreationDatetime" class="form-control" value="@DateTime.Now" type="datetime" />
                <span asp-validation-for="CreationDatetime" class="text-danger"></span>
            </div>
            <div class="form-group" style="display:none">
                <label asp-for="ModificationDatetime" class="control-label"></label>
                <input id="modification_date" asp-for="ModificationDatetime" class="form-control" value="@DateTime.Now" type="datetime" />
                <span asp-validation-for="ModificationDatetime" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Guardar" class="btn btn-primary" style="background-color:yellowgreen; color:white" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Regresar</a>
</div>

<script src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js"></script>

<script>
    function HasUncertaintlyChange() {

        var x = document.getElementById("chk_has_uncertaintly");

        if (x.checked) {
            var txtMin = document.getElementById("div_lower");
            var txtMax = document.getElementById("div_upper");

            txtMin.style.display = "block";
            txtMax.style.display = "block";
        }
        else
        {
            var txtMin = document.getElementById("div_lower");
            var txtMax = document.getElementById("div_upper");

            document.getElementById("txt_lower").value = "0";
            document.getElementById("txt_upper").value = "0";

            txtMin.style.display = "none";
            txtMax.style.display = "none";
        }

        //if ($("#chk_has_uncertaintly").val() == 'true')
        //{
        //    alert("Mostrar");
        //}
        //else
        //{
        //    alert("Ocultar");
        //}
    }
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
