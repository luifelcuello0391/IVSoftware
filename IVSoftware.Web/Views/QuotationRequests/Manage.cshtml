@model IVSoftware.Data.Models.QuotationRequest

@{
    ViewData["Title"] = "gestión de cotización";
}

<h1>Administrar solicitud de cotización</h1>

<div>
    <h4 style="color:yellowgreen">Solicitud de cotización @Model.Name.Replace("<consecutive>", Model.Id.ToString())</h4>
    <hr />

    <dl class="row">
        <dt class="col-sm-2" style="white-space:nowrap">
            @Html.DisplayNameFor(model => model.RequestDateTime)
        </dt>
        <dd class="col-sm-10" style="margin-left:5px">
            @Html.DisplayFor(model => model.RequestDateTime)
        </dd>

        <dt class="col-sm-2" style="white-space:nowrap">
            @Html.DisplayNameFor(model => model.ClientRequestDescription)
        </dt>
        <dd class="col-sm-10" style="margin-left:5px">
            @Html.DisplayFor(model => model.ClientRequestDescription)
        </dd>

        <dt class="col-sm-2" style="white-space:nowrap">
            @Html.DisplayNameFor(model => model.Status)
        </dt>
        <dd class="col-sm-10" style="margin-left:5px">
            @Html.DisplayFor(model => model.StatusName)
        </dd>

        @if (Model.HasBeenGenerated)
        {
            <dt class="col-sm-2" style="white-space:nowrap">
                @Html.DisplayNameFor(model => model.LastGenerationDate)
            </dt>
            <dd class="col-sm-10" style="margin-left:5px">
                @Html.DisplayFor(model => model.LastGenerationDate)
            </dd>
        }
    </dl>

    <hr />
    <h5 style="color:yellowgreen">Información del cliente</h5>
    <hr />
    @if (Model.Client != null)
    {
        <div class="row form-group" style="margin-left:5px">
            <div class="form-group col-md-2">
                <div><b>@Html.DisplayNameFor(model => model.Client.PersonType)</b></div>
                <div>
                    @if (@Model.Client.PersonType == 1)
                    {
                        @Html.Raw("Persona natural")
                    }
                    else
                    {
                        @Html.Raw("Persona jurídica")
                    }
                </div>
            </div>

            <div class="form-group col-md-2">
                <div><b>@Html.DisplayNameFor(model => model.Client.ClientType)</b></div>
                <div>@Html.DisplayFor(model => model.Client.ClientTypeName)</div>
            </div>

            <div class="form-group col-md-2">
                <div><b>@Html.DisplayNameFor(model => model.Client.IsRegular)</b></div>
                <div>@Html.DisplayFor(model => model.Client.IsRegularText)</div>
            </div>

            <div class="form-group col-md-2">
                <div><b>@Html.DisplayNameFor(model => model.Client.DocumentType)</b></div>
                <div>@Html.DisplayFor(model => model.Client.DocumentTypeName)</div>
            </div>

            <div class="form-group col-md-2">
                <div><b>@Html.DisplayNameFor(model => model.Client.Identification)</b></div>
                <div>@Html.DisplayFor(model => model.Client.Identification)</div>
            </div>
        </div>


        <div class="row" style="margin-left:5px">

            <div class="form-group col-md-2">
                <div><b>@Html.DisplayNameFor(model => model.Client.Name)</b></div>
                <div>@Html.DisplayFor(model => model.Client.Name)</div>
            </div>

            <div class="form-group col-md-2">
                <div><b>@Html.DisplayNameFor(model => model.Client.Department)</b></div>
                @if (Model.Client.Department != null && Model.Client.Department.Name != null)
                {
                    <div>@Html.DisplayFor(model => model.Client.Department.Name)</div>
                }
                else
                {
                    <div>@Html.Raw("No asignado")</div>
                }
            </div>

            <div class="form-group col-md-2">
                <div><b>@Html.DisplayNameFor(model => model.Client.City)</b></div>
                @if (Model.Client.Department != null && Model.Client.City.Name != null)
                {
                    <div>@Html.DisplayFor(model => model.Client.City.Name)</div>
                }
                else
                {
                    <div>@Html.Raw("No asignada")</div>
                }
            </div>

            <div class="form-group col-md-2">
                <div><b>@Html.DisplayNameFor(model => model.Client.Address)</b></div>
                <div>@Html.DisplayFor(model => model.Client.Address)</div>
            </div>

            <div class="form-group col-md-2">
                <div><b>@Html.DisplayNameFor(model => model.Client.PhoneNumber)</b></div>
                @if (Model.Client.Extension != null && !string.IsNullOrEmpty(Model.Client.Extension.Replace(" ", string.Empty)))
                {
                    <div>@Html.Raw(string.Format("{0} Ext. {1}", Model.Client.PhoneNumber, Model.Client.Extension))</div>
                }
                else
                {
                    <div>@Html.DisplayFor(model => model.Client.PhoneNumber)</div>
                }
            </div>
        </div>

        <div class="row" style="margin-left:5px">

            <div class="form-group col-md-2">
                <div><b>@Html.DisplayNameFor(model => model.Client.CellPhone)</b></div>
                @if (Model.Client.CellPhone != null && string.IsNullOrEmpty(Model.Client.CellPhone.Replace(" ", string.Empty)))
                {
                    <div>@Html.DisplayFor(model => model.Client.CellPhone)</div>
                }
                else
                {
                    <div>@Html.Raw("No hay datos")</div>
                }
            </div>

            <div class="form-group col-md-2">
                <div><b>@Html.DisplayNameFor(model => model.Client.EmailAddress)</b></div>
                <div>@Html.DisplayFor(model => model.Client.EmailAddress)</div>
            </div>
        </div>
    }

    <hr />
    <h5 style="color:yellowgreen">Información de contacto para envío de correo</h5>
    <hr />

    @if (Model.Contact != null)
    {
        <div class="row form-group" style="margin-left:5px">
            <div class="form-group col-md-2">
                <div><b>@Html.DisplayNameFor(model => model.Contact.DocumentType)</b></div>
                <div>@Html.DisplayFor(model => model.Client.DocumentTypeName)</div>
            </div>

            <div class="form-group col-md-2">
                <div><b>@Html.DisplayNameFor(model => model.Contact.Identification)</b></div>
                <div>@Html.DisplayFor(model => model.Contact.Identification)</div>
            </div>

            <div class="form-group col-md-2">
                <div><b>@Html.DisplayNameFor(model => model.Contact.Name)</b></div>
                <div>@Html.DisplayFor(model => model.Contact.Name)</div>
            </div>

            <div class="form-group col-md-2">
                <div><b>@Html.DisplayNameFor(model => model.Contact.Position)</b></div>
                <div>@Html.DisplayFor(model => model.Contact.Position)</div>
            </div>

            <div class="form-group col-md-2">
                <div><b>@Html.DisplayNameFor(model => model.Contact.ReportDeliveryEmail)</b></div>
                <div>@Html.DisplayFor(model => model.Contact.ReportDeliveryEmail)</div>
            </div>
        </div>

        <input hidden id="txt_email" value="@Model.Contact.ReportDeliveryEmail" />
    }
    else
    {
        @if (Model.Client != null && Model.Client.EmailAddress != null && !string.IsNullOrEmpty(Model.Client.EmailAddress.Replace(" ", string.Empty)))
        {
            <div class="form-group col-md-12">
                <div>El correo de confirmación se enviará a: @Model.Client.EmailAddress</div>
            </div>

            <input hidden id="txt_email" value="@Model.Client.EmailAddress" />
        }
        else
        {
            <div class="form-group col-md-12">
                <div style="color:red">No hay información de contacto, por lo cual el correo de confirmación no podrá ser enviado.</div>
            </div>
        }
    }

    @if (Model.Services != null && Model.Services.Count > 0)
    {
        <!--Resumen de los servicios-->
        <h6 style="margin-left:5px"><b>Tiempo para entrega de resultados: </b>@Html.DisplayFor(modelItem => Model.ServicesReportTime) día(s)</h6>
    }

    <hr />
    <h5 style="color:yellowgreen;margin-left:5px">Totales</h5>
    <hr />
    <table style="margin-left:5px;margin-right:5px">
        <thead style="background-color:yellowgreen; color:white">
            <tr>
                <th style="white-space:nowrap">
                    @Html.Raw("Descripción")
                </th>

                <th style="white-space:nowrap">
                    @Html.Raw("Total")
                </th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td style="white-space:nowrap">
                    @Html.Raw("Valor total por servicios (Subtotal)")
                </td>

                <td style="white-space:nowrap">
                    $ @Html.DisplayFor(modelItem => Model.ServicesTotal)
                </td>
            </tr>

            @if (Model.Incentives != null && Model.Incentives.Count > 0)
            {
                foreach (var incentive in Model.Incentives)
                {
                    if (incentive != null && incentive.Incentive != null)
                    {
                        <tr>
                            <td style="white-space:nowrap">
                                @Html.Raw("Incentivo - ") @Html.DisplayFor(modelItem => incentive.Incentive.Name)

                                @if (incentive.IsPercentage)
                                {
                                    @Html.Raw(String.Format(" ({0}%)", incentive.IncentiveCurrentValue))
                                }
                            </td>

                            <td style="white-space:nowrap">
                                @if (incentive.IsPercentage)
                                {
                                    @Html.Raw("- $ ") @Html.DisplayFor(modelItem => incentive.IncentiveValueFromTotal)
                                }
                                else
                                {
                                    @Html.Raw("- $ ") @Html.DisplayFor(modelItem => incentive.IncentiveCurrentValue)
                                }
                            </td>
                        </tr>
                    }
                }

                <tr>
                    <td style="white-space:nowrap">
                        <b>@Html.Raw("TOTAL, CON INCENTIVOS")</b>
                    </td>
                    <td>
                        <b>$ @Html.DisplayFor(modelItem => modelItem.QuotationTotalValue)</b>
                    </td>
                </tr>
            }
            else
            {
                <tr>
                    <td style="white-space:nowrap">
                        <b>@Html.Raw("TOTAL, SIN INCENTIVOS")</b>
                    </td>
                    <td>
                        <b>$ @Html.DisplayFor(modelItem => modelItem.QuotationTotalValue)</b>
                    </td>
                </tr>
            }

            <!--Include quotation taxes-->
            @if (Model.Taxes != null && Model.Taxes.Count > 0)
            {
                foreach (var tax in Model.Taxes)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => tax.Tax.Name) (@Html.DisplayFor(modelItem => tax.CurrentTaxValue))%
                        </td>
                        <td>
                            $ @Html.DisplayFor(modelItem => tax.ValueFromQuotationTotal)
                        </td>
                    </tr>
                }
            }

            <tr>
                <td style="white-space:nowrap">
                    <b>@Html.Raw("TOTAL COTIZACIÓN")</b>
                </td>

                <td>
                    <b>$ @Html.DisplayFor(modelItem => modelItem.QuotationTotalValueAfterTaxes)</b>
                </td>
            </tr>
        </tbody>
    </table>

    <div>
        <h1></h1>
        <form>
            <input type="hidden" asp-for="Id" />
            @if (Model.Status != null)
            {
                switch (Model.Status.Id)
                {
                    case 1: // Registrada
                        <input type="button" value="Confirmar solicitud" class="btn btn-primary" style="background-color:yellowgreen; color:white" onclick="ManageQuotation(@Model.Id)" />
                        break;

                    case 2: // Generada
                        <input type="button" value="Enviar correo de aceptación" class="btn btn-primary" style="background-color:yellowgreen; color:white" onclick="SendOnlyQuotationEmail(@Model.Id)" />
                        break;
                }
            }
            else
            {
                <input type="button" value="Confirmar solicitud" class="btn btn-primary" style="background-color:yellowgreen; color:white" onclick="ManageQuotation(@Model.Id)" />
            }
            |
            <a asp-action="Index">Regresar</a>
        </form>
    </div>

</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>

<script>
    function SendOnlyQuotationEmail(_id) {
        var url = "@Url.Action("SendQuotationConfirmationEmail")";

        $.get(url, { id: _id }, function (data) {
            if (data != null) {
                if (data.includes("Error:"))
                {
                    alert("Ha ocurrido un error al intentar enviar el correo: " + data.replace("Error: ", ""));
                    location.href = '@Url.Action("Index", "QuotationRequests")';
                }
                else
                {
                    alert("La solicitud de aceptación de la cotización ha sido enviada correctamente, " + data.replace("OK: ", ""));
                    location.href = '@Url.Action("Index", "QuotationRequests")';
                }
            }
            else
            {
                alert("El correo de solicitud de aceptación para la cotización no fué enviado.");
                location.href = '@Url.Action("Index", "QuotationRequests")';
            }
        });
    }

    function SendQuotationEmail(_id) {
        var url = "@Url.Action("SendQuotationConfirmationEmail")";

        $.get(url, { id: _id }, function (data) {
                    if (data != null) {
                        if (data.includes("Error:"))
                        {
                            alert("La cotización ha sido confirmada correctamente, pero ocurrió un error en el envío del correo: " + data.replace("Error: ", ""));
                            location.href = '@Url.Action("Index", "QuotationRequests")';
                        }
                        else
                        {
                            alert("La cotización ha sido confirmada correctamente, " + data.replace("OK: ", ""));
                            location.href = '@Url.Action("Index", "QuotationRequests")';
                        }
                    }
                    else
                    {
                        alert("La cotización ha sido confirmada correctamente, el correo de confirmación no fué enviado.");
                        location.href = '@Url.Action("Index", "QuotationRequests")';
                    }
        });
    }

    function ManageQuotation(_id) {
        var result = confirm("¿Está seguro que desea generar la confirmación de la solicitud de cotización?");

        if (result == true)
        {
            var url = "@Url.Action("ConfirmQuotationManagement")";

            $.get(url, { id: _id}, function (data) {
                if (data != null && data.includes("Error:")) {
                    alert(data);
                }
                else
                {
                    var email = document.getElementById("txt_email");
                    if (email != null)
                    {
                        var contact_email = email.value;

                        if (contact_email != null)
                        {
                            result = confirm("¿Desea enviar el correo de confirmación a " + contact_email + "?");

                            if (result == true)
                            {
                                SendQuotationEmail(_id);
                            }
                            else
                            {
                                alert("La cotización ha sido confirmada correctamente, el correo de confirmación no fué enviado.");
                                location.href = '@Url.Action("Index", "QuotationRequests")';
                            }
                        }
                        else
                        {
                            alert("La cotización ha sido confirmada correctamente, el correo de confirmación no fué enviado.");
                            location.href = '@Url.Action("Index", "QuotationRequests")';
                        }
                    }
                    else
                    {
                        alert("La cotización ha sido confirmada correctamente, el correo de confirmación no fué enviado.");
                        location.href = '@Url.Action("Index", "QuotationRequests")';
                    }
                }
            });
        }
    }
</script>